# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

# this key is for local development only!
manage.json.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

# This is the main configuration file for the application.
# ~~~~~

appName=pension-administrator


# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "bindings.Bindings"
#play.modules.enabled += "bindings.FeatureBindings"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Determines whether the mongo cached data is encrypted or not.
encrypted = false

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="WWyd59Zv19MZz2uMVka2DqHJI8ziPTNa5kn1x99NWB4dtYQTsqoF6Nowzv7EmWRY"

# this key is for local development only!
queryParameter.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

# Session configuration
# ~~~~~
application.session.httpOnly=false
application.session.secure=false
parsers.text.maxLength=1024K

# The application languages
# ~~~~~
application.langs="en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
        needsLogging = false
        needsAuditing = false
    }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = false
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

mongodb {
    uri = "mongodb://localhost:27017/"${appName}
    pension-administrator-cache {
        maxSize = 512000
        psa-journey {
            name = ${appName}-psa-journey-scheme
            timeToLiveInSeconds = 3600
        }
        psa-name {
            name = ${appName}-psa-name
        }
        manage-pensions {
            name = manage-pensions
            timeToLiveInSeconds = 3600
        }
        invitations {
            name = invitations
        }
    }
}

serviceUrls {
    scheme.administrator.register = "/pension-online/subscription"
    register.with.id.individual = "/registration/individual/nino/%s"
    register.with.id.organisation = "/registration/organisation/utr/%s"
    register.without.id.organisation = "/registration/02.00.00/organisation"
    register.without.id.individual = "/registration/02.00.00/individual"
    psa.minimal.details = "/pension-online/psa-min-details/%s"
    psa.subscription.details = "/pension-online/psa-subscription-details/%s"
    createPsaAssociation = "/pension-online/psa-association/pstr/%s"
    checkPsaAssociation = "/pensions-scheme/is-psa-associated"
    email = "/hmrc/email"
    invitation.callback = "/pension-administrator/email-response/%s/%s"
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {
        des-hod {
            host = localhost
            port = 8202
            env = "ist0"
            authorizationToken = "local"
        }

        auth {
            host = localhost
            port = 8500
        }

        email {
            host = localhost
            port = 8300
        }

        pensions-scheme {
            host = localhost
            port = 8203
        }

        pension-administrator {
            host = localhost
            port = 8205
        }

    }

}

invitationExpiryDays = 30
